{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}));\n/* Classes de caracteres de entrada para a máscara do campo placa \n  1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n  2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n  3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\n\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}; // Finalmente, a máscara de entrada do campo placa\n\nconst placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  }); // Validação do numero do imovel\n\n  const [importadoChecked, setImportadoChecked] = useState();\n  const [snackState, setSnackState] = useState({\n    open: false,\n    severity: 'success',\n    message: 'Karango salvo com sucesso'\n  });\n  const [btnSendState, setBtnSendState] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [title, setTitle] = useState('Cadastrar Novo Karango');\n  const history = useHistory();\n  const params = useParams();\n  useEffect(() => {\n    // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\n    // os dados do registro no back-end para edição\n    if (params.id) {\n      setTitle('Editando Karango');\n      getData(params.id);\n    }\n  }, []);\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`);\n      setKarango(response.data);\n    } catch (error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      });\n    }\n  }\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    let importadoCheckedTemp = importadoChecked; // Se houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parâmetro\n\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; //setKarango({...karango, importado: (newState ? '1': '0')})\n\n      karangoTemp.importado = newState ? '1' : '0'; //setImportadoChecked(newState)\n\n      importadoCheckedTemp = newState;\n    } else if (property === 'placa') {\n      //setKarango({...karango, [property]: event.target.value.toUpperCase()}) \n      karangoTemp[property] = event.target.value.toUpperCase();\n    } else {\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\n      // corresponder à avaliação da expressão entre os colchetes\n      //setCurrentId(event.target.id)\n      //setKarango({...karango, [property]: event.target.value})\n      karangoTemp[property] = event.target.value;\n    }\n\n    setKarango(karangoTemp);\n    setImportadoChecked(importadoCheckedTemp);\n    setIsModified(true); // O formulário foi modificado\n\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    };\n    let isValid = true; // trim(): retira espaços em branco do início e do final de uma string\n    // Validação do campo marca\n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    } // Validação do campo modelo\n\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    } // Validação do campo cor\n\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'Escolha uma cor';\n      isValid = false;\n    } // Validação do campo placa\n    // Valor válido não pode ser string vazia nem conter o caractere _\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser corretamente preenchida';\n      isValid = false;\n    } // Validação do campo preco\n    // Valor válido deve ser numérico e maior do que zero\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser prenchido e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  function years() {\n    let result = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) result.push(i);\n\n    return result;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilitar o botão Enviar\n      setBtnSendState({\n        disabled: true,\n        label: 'Enviando...'\n      }); // Se o registro já existe (edição, verbo HTTP PUT)\n\n      if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango); // Registro não existe, cria um novo (verbo HTTP POST)\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango);\n      setSnackState({\n        open: true,\n        severity: 'success',\n        message: 'Karango salvo com sucesso!'\n      });\n    } catch (error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Reabilitar o botão Enviar\n\n\n    setBtnSendState({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita o recarregamento da página\n    // Só salva os dados se eles forem válidos\n\n    if (validate(karango)) saveData();\n  }\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 12\n    }, this);\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que a snackbar seja fechada clicando-se fora dela\n    if (reason === 'clickaway') return;\n    setSnackState({ ...snackState,\n      open: false\n    }); // Fecha a snackbar\n    // Retorna à página de listagem\n\n    history.push('/list'); // Retorna à página de listagem\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false); // Se o usuário concordou em voltar\n\n    if (result) history.push('/list');\n  }\n\n  function handleGoBack() {\n    // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n    if (isModified) setDialogOpen(true); // Senão, voltamos diretamente à página de listagem\n    else history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      isOpen: dialogOpen,\n      onClose: handleDialogClose,\n      children: \"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackState.open,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackClose,\n        severity: snackState.severity,\n        children: snackState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        select: true,\n        fullWidth: true,\n        required: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Amarelo\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Azul\",\n          children: \"Azul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Bege\",\n          children: \"Bege\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Branco\",\n          children: \"Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Cinza\",\n          children: \"Cinza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Dourado\",\n          children: \"Dourado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Laranja\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Marrom\",\n          children: \"Marrom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Prata\",\n          children: \"Prata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Preto\",\n          children: \"Preto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Roxo\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Verde\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vermelho\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de Fabricacao\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        select: true,\n        fullWidth: true,\n        children: years().map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select(),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this)\n        },\n        required: true,\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        formatChars: formatChars,\n        mask: placaMask,\n        id: \"placa\",\n        onChange: event => handleInputChange(event, 'placa'),\n        value: karango.placa,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          fullWidth: true,\n          required: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.checkbox,\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: importadoChecked,\n            onChange: handleInputChange,\n            id: \"importado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 22\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: btnSendState.disabled,\n          children: btnSendState.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleGoBack,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"GvqF4Cb+H9dbLDlUIZJGTmxfN/s=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","makeStyles","FormControl","FormControlLabel","Checkbox","InputMask","InputAdornment","Toolbar","Button","axios","Snackbar","MuiAlert","useHistory","useParams","ConfirmDialog","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","importadoChecked","setImportadoChecked","snackState","setSnackState","open","severity","message","btnSendState","setBtnSendState","disabled","label","error","setError","isModified","setIsModified","dialogOpen","setDialogOpen","title","setTitle","history","params","getData","response","get","data","handleInputChange","event","property","karangoTemp","importadoCheckedTemp","target","newState","value","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","Number","years","result","i","push","saveData","put","post","handleSubmit","preventDefault","Alert","props","handleSnackClose","reason","handleDialogClose","handleGoBack","map","year","select","startAdornment"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px',\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}))\n\n/* Classes de caracteres de entrada para a máscara do campo placa \n  1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n  2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n  3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n  const classes = useStyles()\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: (new Date()).getFullYear(), // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  })\n// Validação do numero do imovel\n  const [importadoChecked, setImportadoChecked] = useState()\n\n  const [snackState, setSnackState] = useState({\n    open: false,\n    severity: 'success',\n    message: 'Karango salvo com sucesso'  \n  })\n\n  const [btnSendState, setBtnSendState] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  })\n\n  const [isModified, setIsModified] = useState(false)\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  const [title, setTitle] = useState('Cadastrar Novo Karango')\n\n  const history = useHistory()\n  const params = useParams()\n\n  useEffect(() => {\n    // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\n    // os dados do registro no back-end para edição\n    if(params.id) {\n      setTitle('Editando Karango')\n      getData(params.id)\n    }\n  }, [])\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n      setKarango(response.data)    \n    }\n    catch(error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      })\n    }\n  } \n\n  function handleInputChange(event, property) {\n    \n    const karangoTemp = {...karango}\n    let importadoCheckedTemp = importadoChecked\n\n    // Se houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parâmetro\n    if(event.target.id) property = event.target.id\n\n    if(property === 'importado') {\n      const newState = ! importadoChecked\n      //setKarango({...karango, importado: (newState ? '1': '0')})\n      karangoTemp.importado = (newState ? '1': '0')\n      //setImportadoChecked(newState)\n      importadoCheckedTemp = newState\n    }\n    else if(property === 'placa') {\n      //setKarango({...karango, [property]: event.target.value.toUpperCase()}) \n      karangoTemp[property] = event.target.value.toUpperCase()\n    }\n    else {\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\n      // corresponder à avaliação da expressão entre os colchetes\n      //setCurrentId(event.target.id)\n      //setKarango({...karango, [property]: event.target.value})\n      karangoTemp[property] = event.target.value\n    }\n    setKarango(karangoTemp)\n    setImportadoChecked(importadoCheckedTemp)\n    setIsModified(true)   // O formulário foi modificado\n    validate(karangoTemp)     // Dispara a validação\n  }\n\n  function validate(data) {\n\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }\n    let isValid = true\n\n    // trim(): retira espaços em branco do início e do final de uma string\n\n    // Validação do campo marca\n    if(data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida'\n      isValid = false\n    }\n\n    // Validação do campo modelo\n    if(data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido'\n      isValid = false\n    }\n\n    // Validação do campo cor\n    if(data.cor.trim() === '') {\n      errorTemp.cor = 'Escolha uma cor'\n      isValid = false\n    }\n\n    // Validação do campo placa\n    // Valor válido não pode ser string vazia nem conter o caractere _\n    if(data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser corretamente preenchida'\n      isValid = false\n    }\n\n    // Validação do campo preco\n    // Valor válido deve ser numérico e maior do que zero\n    if(isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser prenchido e maior que zero'\n      isValid = false  \n    }\n\n    setError(errorTemp)\n    return isValid\n\n  }\n\n  function years() {\n    let result = []\n    for(let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n    return result\n  }\n\n  async function saveData() {\n    try {\n      // Desabilitar o botão Enviar\n      setBtnSendState({disabled: true, label: 'Enviando...'})\n\n      // Se o registro já existe (edição, verbo HTTP PUT)\n      if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n      // Registro não existe, cria um novo (verbo HTTP POST)\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango)\n      \n      setSnackState({\n        open: true,\n        severity: 'success',\n        message: 'Karango salvo com sucesso!'  \n      })\n      \n    }\n    catch(error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message  \n      })  \n    }\n    // Reabilitar o botão Enviar\n    setBtnSendState({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n    \n    event.preventDefault() // Evita o recarregamento da página\n\n    // Só salva os dados se eles forem válidos\n    if(validate(karango)) saveData()\n    \n  }\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que a snackbar seja fechada clicando-se fora dela\n    if(reason === 'clickaway') return\n    setSnackState({...snackState, open: false}) // Fecha a snackbar\n\n    // Retorna à página de listagem\n    history.push('/list')   // Retorna à página de listagem\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou em voltar\n    if(result) history.push('/list')\n  }\n\n  function handleGoBack() {\n    // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n    if(isModified) setDialogOpen(true)\n    // Senão, voltamos diretamente à página de listagem\n    else history.push('/list')\n  }\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Há dados não salvos. Deseja realmente voltar?\n      </ConfirmDialog>\n\n      <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={handleSnackClose} severity={snackState.severity}>\n          {snackState.message}\n        </Alert>\n      </Snackbar>\n      \n      <h1>{title}</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        \n        <TextField \n          id=\"marca\" \n          label=\"Marca\" \n          variant=\"filled\" \n          value={karango.marca} \n          onChange={handleInputChange} \n          fullWidth\n          required\n          error={error.marca !== ''}\n          helperText={error.marca} \n        />\n        \n        <TextField \n          id=\"modelo\" \n          label=\"Modelo\" \n          variant=\"filled\" \n          value={karango.modelo} \n          onChange={handleInputChange} \n          fullWidth\n          required\n          error={error.modelo !== ''}\n          helperText={error.modelo} \n        />\n\n        <TextField \n          id=\"cor\" \n          label=\"Cor\" \n          variant=\"filled\" \n          value={karango.cor} \n          onChange={event => handleInputChange(event, 'cor')} \n          select \n          fullWidth\n          required\n          error={error.cor !== ''}\n          helperText={error.cor} \n        >\n          <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n          <MenuItem value=\"Azul\">Azul</MenuItem>\n          <MenuItem value=\"Bege\">Bege</MenuItem>\n          <MenuItem value=\"Branco\">Branco</MenuItem>\n          <MenuItem value=\"Cinza\">Cinza</MenuItem>\n          <MenuItem value=\"Dourado\">Dourado</MenuItem>\n          <MenuItem value=\"Laranja\">Laranja</MenuItem>\n          <MenuItem value=\"Marrom\">Marrom</MenuItem>\n          <MenuItem value=\"Prata\">Prata</MenuItem>\n          <MenuItem value=\"Preto\">Preto</MenuItem>\n          <MenuItem value=\"Roxo\">Roxo</MenuItem>\n          <MenuItem value=\"Verde\">Verde</MenuItem>\n          <MenuItem value=\"Vermelho\">Vermelho</MenuItem>        \n        </TextField>\n\n        <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricacao\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} select fullWidth>\n          { years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>) }\n        </TextField>\n\n        <TextField \n          id=\"preco\" \n          label=\"Preço\" \n          variant=\"filled\" \n          value={karango.preco} \n          onChange={handleInputChange} \n          fullWidth \n          type=\"number\"\n          onFocus={event => event.target.select()} \n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n          }}\n          required\n          error={error.preco !== ''}\n          helperText={error.preco} \n        />\n\n        <InputMask \n          formatChars={formatChars} \n          mask={placaMask} \n          id=\"placa\" \n          onChange={event => handleInputChange(event, 'placa')} \n          value={karango.placa}\n        >\n          {() => <TextField \n            label=\"Placa\" \n            variant=\"filled\" \n            fullWidth \n            required\n            error={error.placa !== ''}\n            helperText={error.placa} \n          />}\n        </InputMask>\n\n        <FormControl className={classes.checkbox} fullWidth>\n          <FormControlLabel\n            control={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\n            label=\"Importado?\"\n          />\n        </FormControl>\n\n        <Toolbar className={classes.toolbar}>\n          <Button \n            variant=\"contained\" \n            color=\"secondary\" \n            type=\"submit\"\n            disabled={btnSendState.disabled}\n          >\n              {btnSendState.label}\n          </Button>\n          <Button variant=\"contained\" onClick={handleGoBack}>\n            Voltar\n          </Button>\n        </Toolbar>\n            \n        {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n      </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}