{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConfirmDialog(_ref){var _ref$title=_ref.title,title=_ref$title===void 0?'Confirmar':_ref$title,_ref$isOpen=_ref.isOpen,isOpen=_ref$isOpen===void 0?false:_ref$isOpen,onClose=_ref.onClose,children=_ref.children;var handleClose=function handleClose(result){// So chama a função onClose se a prop correspondente tiver sido passada\nif(onClose)onClose(result);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{open:isOpen,onClose:function onClose(){return handleClose(false);},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:title}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:children})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleClose(true);},color:\"primary\",children:\"OK\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleClose(false);},color:\"primary\",autoFocus:true,children:\"Cancelar\"})]})]})});}","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/ui/ConfirmDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ConfirmDialog","title","isOpen","onClose","children","handleClose","result"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,C,wFAEA,cAAe,SAASC,CAAAA,aAAT,MAAmF,qBAA1DC,KAA0D,CAA1DA,KAA0D,qBAAlD,WAAkD,6BAArCC,MAAqC,CAArCA,MAAqC,sBAA5B,KAA4B,aAArBC,OAAqB,MAArBA,OAAqB,CAAZC,QAAY,MAAZA,QAAY,CAI9F,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC5B;AACA,GAAIH,OAAJ,CAAaA,OAAO,CAACG,MAAD,CAAP,CAChB,CAHD,CAKA,mBACI,kCAEI,MAAC,MAAD,EACI,IAAI,CAAEJ,MADV,CAEI,OAAO,CAAE,yBAAMG,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAFb,CAGI,kBAAgB,oBAHpB,CAII,mBAAiB,0BAJrB,wBAMI,KAAC,WAAD,EAAa,EAAE,CAAC,oBAAhB,UAAsCJ,KAAtC,EANJ,cAOI,KAAC,aAAD,wBACI,KAAC,iBAAD,EAAmB,EAAE,CAAC,0BAAtB,UACKG,QADL,EADJ,EAPJ,cAYI,MAAC,aAAD,yBACI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,IAAD,CAAjB,EAAjB,CAA0C,KAAK,CAAC,SAAhD,gBADJ,cAII,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMA,CAAAA,WAAW,CAAC,KAAD,CAAjB,EAAjB,CAA2C,KAAK,CAAC,SAAjD,CAA2D,SAAS,KAApE,sBAJJ,GAZJ,GAFJ,EADJ,CA0BH","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({ title = 'Confirmar', isOpen = false, onClose, children }) {\n\n\n\n    const handleClose = (result) => {\n        // So chama a função onClose se a prop correspondente tiver sido passada\n        if (onClose) onClose(result);\n    };\n\n    return (\n        <div>\n\n            <Dialog\n                open={isOpen}\n                onClose={() => handleClose(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {children}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose(true)} color=\"primary\">\n                        OK\n                    </Button>\n                    <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n                        Cancelar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}