{"ast":null,"code":"var _jsxFileName = \"/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  form: {\n    maxWidth: '80%',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      marginBottom: '24px'\n    }\n  },\n  toolbar: {\n    marginTop: '36px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    alignItems: 'center'\n  }\n}));\n/* Classes de caracteres de entrada para a máscara do campo placa\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\n\nconst formatChars = {\n  'A': '[A-Za-z]',\n  '0': '[0-9]',\n  '#': '[0-9A-Ja-j]'\n}; // Finalmente, a máscara de entrada do campo placa\n\nconst placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState();\n  const [snackState, setSnackState] = useState({\n    open: false,\n    severity: 'success',\n    message: 'Karango salvo com sucesso'\n  });\n  const [btnSendState, setBtnSendState] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const history = useHistory();\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    let importadoCheckedTemp = importadoChecked; // Se houver id no event.target, ele será o nome da propriedade\n    // senão, usaremos o valor do segundo parâmetro\n\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; //setKarango({...karango, importado: (newState ? '1': '0')})\n\n      karangoTemp.importado = newState ? '1' : '0'; //setImportadoChecked(newState)\n\n      importadoCheckedTemp = newState;\n    } else if (property === 'placa') {\n      //setKarango({...karango, [property]: event.target.value.toUpperCase()})\n      karangoTemp[property] = event.target.value.toUpperCase();\n    } else {\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\n      // corresponder à avaliação da expressão entre os colchetes\n      //setCurrentId(event.target.id)\n      //setKarango({...karango, [property]: event.target.value})\n      karangoTemp[property] = event.target.value;\n    }\n\n    setKarango(karangoTemp);\n    setImportadoChecked(importadoCheckedTemp);\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    };\n    let isValid = true; // trim(): retira espaços em branco do início e do final de uma string\n    // Validação do campo marca\n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    } // Validação do campo modelo\n\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    } // Validação do campo cor\n\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'Escolha uma cor';\n      isValid = false;\n    } // Validação do campo placa\n    // Valor válido não pode ser string vazia nem conter o caractere _\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser corretamente preenchida';\n      isValid = false;\n    } // Validação do campo preco\n    // Valor válido deve ser numérico e maior do que zero\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser prenchido e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  function years() {\n    let result = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) result.push(i);\n\n    return result;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilitar o botão Enviar\n      setBtnSendState({\n        disabled: true,\n        label: 'Enviando...'\n      });\n      await axios.post('https://api.faustocintra.com.br/karangos', karango);\n      setSnackState({\n        open: true,\n        severity: 'success',\n        message: 'Karango salvo com sucesso!'\n      });\n    } catch (error) {\n      setSnackState({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Reabilitar o botão Enviar\n\n\n    setBtnSendState({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita o recarregamento da página\n\n    saveData();\n  }\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 8\n    }, this);\n  }\n\n  function handleSnackClose(event, reason) {\n    // Evita que a snackbar seja fechada clicando-se fora dela\n    if (reason === 'clickaway') return;\n    setSnackState({ ...snackState,\n      open: false\n    }); // Fecha a snackbar\n    // Retorna à página de listagem\n\n    history.push('/list'); // Retorna à página de listagem\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackState.open,\n      autoHideDuration: 6000,\n      onClose: handleSnackClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackClose,\n        severity: snackState.severity,\n        children: snackState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Novo Karango\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        fullWidth: true,\n        required: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        select: true,\n        fullWidth: true,\n        required: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Amarelo\",\n          children: \"Amarelo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Azul\",\n          children: \"Azul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Bege\",\n          children: \"Bege\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Branco\",\n          children: \"Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Cinza\",\n          children: \"Cinza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Dourado\",\n          children: \"Dourado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Laranja\",\n          children: \"Laranja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Marrom\",\n          children: \"Marrom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Prata\",\n          children: \"Prata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Preto\",\n          children: \"Preto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Roxo\",\n          children: \"Roxo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Verde\",\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vermelho\",\n          children: \"Vermelho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de Fabricacao\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        select: true,\n        fullWidth: true,\n        children: years().map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select(),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)\n        },\n        required: true,\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        formatChars: formatChars,\n        mask: placaMask,\n        id: \"placa\",\n        onChange: event => handleInputChange(event, 'placa'),\n        value: karango.placa,\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          fullWidth: true,\n          required: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.checkbox,\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: importadoChecked,\n            onChange: handleInputChange,\n            id: \"importado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 10\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: btnSendState.disabled,\n          children: btnSendState.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [JSON.stringify(karango), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 31\n        }, this), \"currentId: \", currentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"YpXfl/UIdJwhcjT0CRlSpzkwhd4=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","makeStyles","FormControl","FormControlLabel","Checkbox","InputMask","InputAdornment","Toolbar","Button","axios","Snackbar","MuiAlert","useHistory","useStyles","form","maxWidth","margin","display","justifyContent","flexWrap","minWidth","marginBottom","toolbar","marginTop","width","checkbox","alignItems","formatChars","placaMask","KarangosForm","classes","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","currentId","setCurrentId","importadoChecked","setImportadoChecked","snackState","setSnackState","open","severity","message","btnSendState","setBtnSendState","disabled","label","error","setError","isModified","setIsModified","history","handleInputChange","event","property","karangoTemp","importadoCheckedTemp","target","newState","value","toUpperCase","validate","data","errorTemp","isValid","trim","includes","isNaN","Number","years","result","i","push","saveData","post","handleSubmit","preventDefault","Alert","props","handleSnackClose","reason","map","year","select","startAdornment","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom'\nconst useStyles = makeStyles(() => ({\nform: {\nmaxWidth: '80%',\nmargin: '0 auto',\ndisplay: 'flex',\njustifyContent: 'space-around',\nflexWrap: 'wrap',\n'& .MuiFormControl-root': {\nminWidth: '200px',\nmaxWidth: '500px',\nmarginBottom: '24px',\n}\n},\ntoolbar: {\nmarginTop: '36px',\nwidth: '100%',\ndisplay: 'flex',\njustifyContent: 'space-around'\n},\ncheckbox: {\nalignItems: 'center'\n}\n}))\n/* Classes de caracteres de entrada para a máscara do campo placa\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n3) 2º posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n'A': '[A-Za-z]',\n'0': '[0-9]',\n'#': '[0-9A-Ja-j]'\n}\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\nexport default function KarangosForm() {\nconst classes = useStyles()\n const [karango, setKarango] = useState({\nid: null,\nmarca: '',\nmodelo: '',\ncor: '',\nano_fabricacao: (new Date()).getFullYear(), // Ano corrente\nimportado: '0',\nplaca: '',\npreco: 0\n})\nconst [currentId, setCurrentId] = useState()\nconst [importadoChecked, setImportadoChecked] = useState()\n const [snackState, setSnackState] = useState({\nopen: false,\nseverity: 'success',\nmessage: 'Karango salvo com sucesso'\n})\n const [btnSendState, setBtnSendState] = useState({\ndisabled: false,\nlabel: 'Enviar'\n})\n const [error, setError] = useState({\nmarca: '',\nmodelo: '',\ncor: '',\nplaca: '',\npreco: ''\n})\n const [isModified, setIsModified] = useState(false)\n const history = useHistory()\n function handleInputChange(event, property) {\n\nconst karangoTemp = {...karango}\nlet importadoCheckedTemp = importadoChecked\n // Se houver id no event.target, ele será o nome da propriedade\n// senão, usaremos o valor do segundo parâmetro\nif(event.target.id) property = event.target.id\n if(property === 'importado') {\nconst newState = ! importadoChecked\n//setKarango({...karango, importado: (newState ? '1': '0')})\nkarangoTemp.importado = (newState ? '1': '0')\n//setImportadoChecked(newState)\nimportadoCheckedTemp = newState\n}\nelse if(property === 'placa') {\n//setKarango({...karango, [property]: event.target.value.toUpperCase()})\nkarangoTemp[property] = event.target.value.toUpperCase()\n}\nelse {\n// Quando o nome de uma propriedade de um objeto aparece entre [],\n// isso se chama \"propriedade calculada\". O nome da propriedade vai\n// corresponder à avaliação da expressão entre os colchetes\n//setCurrentId(event.target.id)\n//setKarango({...karango, [property]: event.target.value})\nkarangoTemp[property] = event.target.value\n}\nsetKarango(karangoTemp)\nsetImportadoChecked(importadoCheckedTemp)\nvalidate(karangoTemp) // Dispara a validação\n}\n function validate(data) {\n const errorTemp = {\nmarca: '',\nmodelo: '',\ncor: '',\nplaca: '',\npreco: ''\n}\nlet isValid = true\n // trim(): retira espaços em branco do início e do final de uma string\n // Validação do campo marca\nif(data.marca.trim() === '') {\nerrorTemp.marca = 'A marca deve ser preenchida'\nisValid = false\n}\n // Validação do campo modelo\nif(data.modelo.trim() === '') {\nerrorTemp.modelo = 'O modelo deve ser preenchido'\nisValid = false\n}\n // Validação do campo cor\nif(data.cor.trim() === '') {\nerrorTemp.cor = 'Escolha uma cor'\nisValid = false\n}\n // Validação do campo placa\n// Valor válido não pode ser string vazia nem conter o caractere _\nif(data.placa.trim() === '' || data.placa.includes('_')) {\nerrorTemp.placa = 'A placa deve ser corretamente preenchida'\nisValid = false\n}\n // Validação do campo preco\n// Valor válido deve ser numérico e maior do que zero\nif(isNaN(data.preco) || Number(data.preco) <= 0) {\nerrorTemp.preco = 'O preço deve ser prenchido e maior que zero'\nisValid = false\n}\n setError(errorTemp)\nreturn isValid\n }\n function years() {\nlet result = []\nfor(let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\nreturn result\n}\n async function saveData() {\ntry {\n// Desabilitar o botão Enviar\nsetBtnSendState({disabled: true, label: 'Enviando...'})\n await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\nsetSnackState({\nopen: true,\nseverity: 'success',\nmessage: 'Karango salvo com sucesso!'\n})\n\n}\ncatch(error) {\nsetSnackState({\nopen: true,\nseverity: 'error',\nmessage: 'ERRO: ' + error.message\n})\n}\n// Reabilitar o botão Enviar\nsetBtnSendState({disabled: false, label: 'Enviar'})\n}\n function handleSubmit(event) {\n\nevent.preventDefault() // Evita o recarregamento da página\n saveData()\n\n}\n function Alert(props) {\nreturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n function handleSnackClose(event, reason) {\n// Evita que a snackbar seja fechada clicando-se fora dela\nif(reason === 'clickaway') return\nsetSnackState({...snackState, open: false}) // Fecha a snackbar\n // Retorna à página de listagem\nhistory.push('/list') // Retorna à página de listagem\n}\n return (\n<>\n\n<Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n<Alert onClose={handleSnackClose} severity={snackState.severity}>\n{snackState.message}\n</Alert>\n</Snackbar>\n\n<h1>Cadastrar Novo Karango</h1>\n<form className={classes.form} onSubmit={handleSubmit}>\n\n<TextField\nid=\"marca\"\nlabel=\"Marca\"\nvariant=\"filled\"\nvalue={karango.marca}\nonChange={handleInputChange}\nfullWidth\nrequired\nerror={error.marca !== ''}\nhelperText={error.marca}\n/>\n\n<TextField\nid=\"modelo\"\nlabel=\"Modelo\"\nvariant=\"filled\"\nvalue={karango.modelo}\nonChange={handleInputChange}\nfullWidth\nrequired\nerror={error.modelo !== ''}\nhelperText={error.modelo}\n/>\n <TextField\nid=\"cor\"\nlabel=\"Cor\"\nvariant=\"filled\"\nvalue={karango.cor}\nonChange={event => handleInputChange(event, 'cor')}\nselect\nfullWidth\nrequired\nerror={error.cor !== ''}\nhelperText={error.cor}\n>\n<MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n<MenuItem value=\"Azul\">Azul</MenuItem>\n<MenuItem value=\"Bege\">Bege</MenuItem>\n<MenuItem value=\"Branco\">Branco</MenuItem>\n<MenuItem value=\"Cinza\">Cinza</MenuItem>\n<MenuItem value=\"Dourado\">Dourado</MenuItem>\n<MenuItem value=\"Laranja\">Laranja</MenuItem>\n<MenuItem value=\"Marrom\">Marrom</MenuItem>\n<MenuItem value=\"Prata\">Prata</MenuItem>\n<MenuItem value=\"Preto\">Preto</MenuItem>\n<MenuItem value=\"Roxo\">Roxo</MenuItem>\n<MenuItem value=\"Verde\">Verde</MenuItem>\n<MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n</TextField>\n <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricacao\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} select fullWidth>\n{ years().map(year => <MenuItem value={year}>{year}</MenuItem>) }\n</TextField>\n <TextField\nid=\"preco\"\nlabel=\"Preço\"\nvariant=\"filled\"\nvalue={karango.preco}\nonChange={handleInputChange}\nfullWidth\ntype=\"number\"\nonFocus={event => event.target.select()}\nInputProps={{\nstartAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n}}\nrequired\nerror={error.preco !== ''}\nhelperText={error.preco}\n/>\n <InputMask\nformatChars={formatChars}\nmask={placaMask}\nid=\"placa\"\nonChange={event => handleInputChange(event, 'placa')}\nvalue={karango.placa}\n>\n{() => <TextField\nlabel=\"Placa\"\nvariant=\"filled\"\nfullWidth\nrequired\nerror={error.placa !== ''}\nhelperText={error.placa}\n/>}\n</InputMask>\n <FormControl className={classes.checkbox} fullWidth>\n<FormControlLabel\ncontrol={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\nlabel=\"Importado?\"\n/>\n</FormControl>\n <Toolbar className={classes.toolbar}>\n<Button\nvariant=\"contained\"\ncolor=\"secondary\"\ntype=\"submit\"\ndisabled={btnSendState.disabled}\n>\n{btnSendState.label}\n</Button>\n<Button variant=\"contained\">Voltar</Button>\n</Toolbar>\n\n<div>{JSON.stringify(karango)}<br />currentId: {currentId}</div>\n</form>\n</>\n)\n}"]},"metadata":{},"sourceType":"module"}