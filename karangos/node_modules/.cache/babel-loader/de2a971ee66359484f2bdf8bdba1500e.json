{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identifier = Identifier;\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.RecordExpression = RecordExpression;\nexports.TupleExpression = TupleExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.StringLiteral = StringLiteral;\nexports.BigIntLiteral = BigIntLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst jsesc = require(\"jsesc\");\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.token(\"?\");\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(\"}\");\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.token(\"[\");\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number(jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  const val = jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {\n    json: true\n  }));\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"m\");\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.token(\"#\");\n}","map":{"version":3,"sources":["/workspace/Karangos-not-2021-1/karangos/node_modules/@babel/generator/lib/generators/types.js"],"names":["Object","defineProperty","exports","value","Identifier","ArgumentPlaceholder","SpreadElement","RestElement","ObjectPattern","ObjectExpression","ObjectMethod","ObjectProperty","ArrayPattern","ArrayExpression","RecordExpression","TupleExpression","RegExpLiteral","BooleanLiteral","NullLiteral","NumericLiteral","StringLiteral","BigIntLiteral","DecimalLiteral","PipelineTopicExpression","PipelineBareFunction","PipelinePrimaryTopicReference","t","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","jsesc","node","exactSource","loc","word","name","token","print","argument","props","properties","printInnerComments","length","space","printList","indent","statement","printJoin","decorators","_methodHead","body","computed","isAssignmentPattern","isIdentifier","left","shorthand","elems","elements","len","i","elem","startToken","endToken","format","recordAndTupleSyntaxType","Error","JSON","stringify","pattern","flags","raw","getPossibleRaw","opts","jsescOption","numbers","number","minified","val","assign","jsonCompatibleStrings","json","expression","callee"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identifier = Identifier;\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.RecordExpression = RecordExpression;\nexports.TupleExpression = TupleExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.StringLiteral = StringLiteral;\nexports.BigIntLiteral = BigIntLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst jsesc = require(\"jsesc\");\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.token(\"?\");\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(\"}\");\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.token(\"[\");\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number(jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  const val = jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {\n    json: true\n  }));\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"m\");\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.token(\"#\");\n}"]},"metadata":{},"sourceType":"script"}